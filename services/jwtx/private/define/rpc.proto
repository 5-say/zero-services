syntax = "proto3";

package jwtx;
option go_package="./jwtx";

service jwtx {
  // 生成 token
  rpc MakeToken(MakeToken_Request) returns(MakeToken_Response);

  // 校验 token
  rpc CheckToken(CheckToken_Request) returns(CheckToken_Response);

  // 移除 token
  rpc DeleteToken(MakeToken_Request) returns(MakeToken_Response);
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 生成 token - 请求
message MakeToken_Request {
  string secretKey       = 1; // 密钥
  string group           = 2; // 分组
  int64  expSecond       = 3; // 过期时长（秒）
  string randomAccountID = 4; // 加密的账户 ID
  string requestIP       = 5; // 发起请求的 IP 地址
}
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 生成 token - 响应
message MakeToken_Response {
  string token = 1;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 校验 token - 请求
message CheckToken_Request {
  string secretKey = 1; // 密钥
  int64  refSecond = 2; // 刷新间隔（秒）
  bool   checkIP   = 3; // 是否开启 IP 一致性校验，当前 IP 必须与登录时 IP 一致
  string requestIP = 4; // 发起请求的 IP 地址
  uint64 tid       = 5; // token ID
  int64  iat       = 6; // 签发时间
}
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 校验 token - 响应
message CheckToken_Response {
  string newToken        = 1;
  string randomAccountID = 2; // 加密的账户 ID
}
